@model ExpenseManagementSystem.ViewModels.ExpenseFormVM

<div>
    <form asp-action="Edit" method="post">
        <div class="mb-3">
            <label for="currencySelector">Currency selected:</label>
            <input id="currencySelector" name="SelectedCurrency" class="form-control" value="@Model.SelectedCurrency" readonly />
        </div>

        <div id="expensesContainer" class="d-flex flex-wrap mb-3">
            @for (var i = 0; i < Model.Expenses.Count; i++)
            {
                <div class="d-flex flex-wrap p-2 me-2 border expense-row" data-index="@i">
                    <!-- Hidden field for the ExpenseItem Id -->
                    <input type="hidden" asp-for="@Model.Expenses[i].Id" name="Expenses[@i].Id" />

                    <div style="font-weight: bold; margin-right: 15px;" class="mb-2">
                        <label asp-for="@Model.Expenses[i].Description">Description:</label>
                        <input asp-for="@Model.Expenses[i].Description" class="form-control" />
                        <span asp-validation-for="@Model.Expenses[i].Description" class="text-danger"></span>
                    </div>
                    <div style="font-weight: bold; margin-right: 15px;" class="mb-2">
                        <label asp-for="@Model.Expenses[i].Amount">Amount:</label>
                        <input asp-for="@Model.Expenses[i].Amount" class="form-control" oninput="updateTotalAmount()" />
                        <span asp-validation-for="@Model.Expenses[i].Amount" class="text-danger"></span>
                    </div>

                    <div style="font-weight: bold; margin-right: 15px;" class="mb-2">
                        <label asp-for="@Model.Expenses[i].Date">Date:</label>
                        <input asp-for="@Model.Expenses[i].Date" class="form-control" type="date" />
                        <span asp-validation-for="@Model.Expenses[i].Date" class="text-danger"></span>
                    </div>

                    <!-- Remove button -->
                    <div class="mt-4 remove-expense-container">
                        <button type="button" class="btn btn-danger remove-expense-btn" data-id="@Model.Expenses[i].Id">Remove</button>
                    </div>
                </div>
            }
        </div>

        <!-- Validation message for at least one expense -->
        <div id="oneExpenseValidationMessage" class="alert alert-danger mt-2" role="alert" style="display:none;">
            The expense form must have at least one expense.
        </div>

        <!-- Hidden field to store the total amount to be submitted with the form -->
        <input type="hidden" id="totalAmountInput" name="TotalAmount" value="@Model.TotalAmount" />

        <button type="button" id="addExpenseBtn" class="btn btn-secondary">Add Expense</button>

        <div class="mt-3">
            <strong>Total Amount:</strong>
            <span id="totalAmount">@Model.TotalAmount.ToString("F2")</span>
            <div id="amountLimitMessage" class="alert alert-danger mt-2" role="alert" style="display:none;">
                Total amount cannot exceed 5000.
            </div>
        </div>

        

        <!-- Hidden field to store the IDs of expenses marked for deletion -->
        <input type="hidden" id="IdsToDelete" name="IdsToDelete" />

        <button type="submit" id="updateExpenseBtn" class="btn btn-primary mt-3">Update</button>
    </form>
</div>

@section Scripts {
    <script>
        var expenseModelCount = @Model.Expenses.Count; // Pass the count of current expenses to the JS file
    </script>
    <script src="~/js/ExpenseFormUpdate.js"></script>
}